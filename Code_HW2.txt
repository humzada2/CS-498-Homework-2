First instance js file:


const express = require('express');
const mariadb = require('mariadb');
const path = require('path');
const bodyParser = require('body-parser');
const app = express();
app.use(express.json())
const port = 80;
app.listen(port, () => {
 console.log(`Server is running on http://<external ip>:${port}`);
});
const pool = mariadb.createPool({
    host: '127.0.0.1', // Use IP address to force TCP connection
    port: 3306, 
    user: 'humza',
    password: 'secret', // Replace with your MariaDB password
    database: 'bd', // Our database name created above
    connectionLimit: 5
});
app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));
app.use(bodyParser.urlencoded({ extended: true}));
app.get('/', async (req, res) => {
    let conn;
    try {
        conn = await pool.getConnection();
        const users = await conn.query('SELECT * FROM Users');
        res.render('index', { users });
    } catch (err) {
        res.status(500).send('Error retrieving users: ${err}');
    } finally {
        if (conn) conn.release();
    }
});

app.post('/register', async (req, res) => {
    const { username } = req.body;
    console.log(username)
    if (!username) {
        return res.status(400).json({ error: 'Username is required' });
    }

    let conn;
    try {
        conn = await pool.getConnection();
        await conn.query('INSERT INTO Users (username) VALUES (?)', [username]);
        res.status(201).json({ message: `User ${username} registered successfully!` });
    } catch (err) {
        res.status(500).send(`Error registering user: ${err}`);
    } finally {
        if (conn) conn.release();
    }
});

app.get('/list', async (req, res) => {
    let conn;
    try {
        conn = await pool.getConnection();
        const users = await conn.query('SELECT username FROM Users');
        res.json({ users: users.map(user => user.username) });
    } catch (err) {
        res.status(500).send(`Error fetching users: ${err}`);
    } finally {
        if (conn) conn.release();
    }
});

app.post('/clear', async (req, res) => {
    let conn;
    try {
        conn = await pool.getConnection();
        await conn.query('DELETE FROM Users'); // Clears all users
        res.status(200).json({ message: 'All users have been cleared!' });
    } catch (err) {
        res.status(500).send(`Error clearing users: ${err}`);
    } finally {
        if (conn) conn.release();
    }
});
app.get("/greeting", (req, res) => {
    res.send("<h1>Hello World!</h1>");
});


First instance html file:


<!DOCTYPE html>
<html>
<head>
 <meta charset="UTF-8">
 <title>Gang Customers</title>
 <style>
 body { font-family: Arial, sans-serif; margin: 20px; }
 table { border-collapse: collapse; width: 50%; }
 table, th, td { border: 1px solid #ccc; }
 th, td { padding: 8px; text-align: left; }
 form { margin-bottom: 20px;}
 </style>
</head>
<body>
 <h1>The Gang</h1>
 <!-- Form to add a new customer -->
 <form action="/register" method="POST">
 <input type="text" name="username" placeholder="Enter customer name" required>
 <button type="submit">Add Gang Member</button>
 </form>
 <!-- Table of existing customers -->
 <h2>Gang List</h2>
 <table>
 <thead>
 <tr>
 <th>username</th>
 </tr>
 </thead>
 <tbody>
 <% if (users && users.length) { %>
 <% users.forEach(users => { %>
 <tr>
 <td><%= users.username%></td>
 </tr>
 <% }); %>
 <% } else { %>
 <tr>
 <td colspan="3">No Gang found.</td>
 </tr>
 <% } %>
 </tbody>
 </table>
<form action="/clear" method="POST">
    <button type="submit">Merc Them</button>
</form>
</body>
</html>


Second instance js file:


const express = require('express');
const mariadb = require('mariadb');
const path = require('path');
const bodyParser = require('body-parser');
const axios = require('axios');
const app = express();
app.use(express.json())
const port = 80;
const pool = mariadb.createPool({
    host: '127.0.0.1', // Use IP address to force TCP connection
    port: 3306,
    user: 'humza',
    password: 'password', // Replace with your MariaDB password
    database: 'db', // Our database name created above
    connectionLimit: 5
});
app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));
app.use(bodyParser.urlencoded({ extended: true}));
app.get('/', async (req, res) => {
    let conn;
    try {
        axios.get('http://34.30.89.118/list')
                .then(response => {
                        const users = response.data.users;
                        console.log('User registered successfully:', response.data);
                        res.render('index', { users });

                })
    } catch (err) {
        res.status(500).send('Error retrieving users: ${err}');
    }
});

app.post('/register', async (req, res) => {
    const { username } = req.body;
    
    if (!username) {
        return res.status(400).send('Username is required');
    }

    try {
        const response = await axios.post('http://34.30.89.118/register', {username} );

        console.log('User registered successfully:', response.data);
        res.status(200).json({ message: 'User registered successfully', data: response.data });

    } catch (err) {
        console.error('Error registering user:', err);
        res.status(500).send(`Error registering user: ${err.message}`);
    }
});

app.get('/list', async (req, res) => {  
    let conn;
    try {
        axios.get('http://34.30.89.118/list')
                .then(response => {
                        res.json(response.data)
                        console.log('User registered successfully:', response.data);
                })
    } catch (err) {
        res.status(500).send(`Error fetching users: ${err}`);
    }
});

app.post('/clear', async (req, res) => {
    try {
        const response = await axios.post('http://34.30.89.118/clear');

        console.log('Users cleared successfully:', response.data);

        res.status(200).json({ message: 'Users cleared successfully' });

    } catch (err) {
        console.error('Error clearing users:', err);
        res.status(500).send(`Error clearing users: ${err.message}`);
    }
});


app.listen(port, () => {
    console.log('Server is running on http://localhost:${port}');
});
app.get("/greeting", (req, res) => {
    res.send("<h1>Hello World!</h1>");
});



Second instance html file:



<!DOCTYPE html>
<html>
<head>
 <meta charset="UTF-8">
 <title>Gang Customers</title>
 <style>
 body { font-family: Arial, sans-serif; margin: 20px; }
 table { border-collapse: collapse; width: 50%; }
 table, th, td { border: 1px solid #ccc; }
 th, td { padding: 8px; text-align: left; }
 form { margin-bottom: 20px;}
 </style>
</head>
<body>
 <h1>The Gang</h1>
 <!-- Form to add a new customer -->
 <form action="/register" method="POST">
 <input type="text" name="username" placeholder="Enter customer name" required>
 <button type="submit">Add Gang Member</button>
 </form>
 <!-- Table of existing customers -->
 <h2>Gang List</h2>
 <table>
 <thead>
 <tr>
 <th>username</th>
 </tr>
 </thead>
 <tbody>
 <% if (users && users.length) { %>
 <% users.forEach(users => { %>
 <tr>
 <td><%= users%></td>
 </tr>
 <% }); %>
 <% } else { %>
 <tr>
 <td colspan="3">No Gang found.</td>
 </tr>
 <% } %>
 </tbody>
</table>
 <form action="/clear" method="POST">
    <button type="submit">Merc Them</button>
</form>
</body>
</html>
